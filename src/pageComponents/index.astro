---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import FormattedDate from '@/components/FormattedDate.astro';
import { extractPostSlug } from '@/utils/extractPostSlug';
import { CATEGORY_MAP, PAGE_SIZE } from '@/consts';

const posts = (await getCollection('posts'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, PAGE_SIZE)
  .map((post) => {
    return { ...post, slug: extractPostSlug(post.slug) };
  });
---

<BaseLayout>
  <div>
    {
      posts.map((post) => (
        <article class="border-b py-4 last:border-none">
          <p class="text-sm">
            <FormattedDate date={post.data.pubDate} />
            {post.data.updatedDate && (
              <span class="inline-flex items-center">
                (<span class="i-system-uicons:refresh mr-1">更新日</span>
                <FormattedDate date={post.data.updatedDate} />)
              </span>
            )}
          </p>
          <h2 class="text-2xl font-600">
            <a
              href={`/posts/${post.slug}`}
              class="block underline-offset-2 decoration-solid hover:underline"
            >
              {post.data.title}
            </a>
          </h2>
          <p class="mt-2 flex items-center">
            <span class="i-system-uicons:document mr-0.5 text-lg">
              カテゴリー
            </span>
            {`${CATEGORY_MAP[post.data.category]}`}
          </p>
          <p class="flex items-center">
            <span class="i-system-uicons:tag mr-0.5 text-lg">タグ一覧</span>
            {post.data.tags.join(', ')}
          </p>
        </article>
      ))
    }
    <div class="mt-4 text-right">
      <a href="/posts/2" class="inline-flex items-center px-2 py-1"
        >次ページへ<span class="i-system-uicons:arrow-right-circle ml-0.5"
        ></span></a
      >
    </div>
  </div>
</BaseLayout>
