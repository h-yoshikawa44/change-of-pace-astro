---
import type { GetStaticPathsOptions, Page } from 'astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import PostPagingList from '@/features/post/PostPagingList.astro';
import { CATEGORY_LIST, CATEGORY_MAP, RSS_LINKS } from '@/consts';
import { extractPostId } from '@/utils/extractPostId';

type Params = {
  category: keyof typeof CATEGORY_MAP;
};
type Props = {
  page: Page<CollectionEntry<'posts'>>;
};

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = (await getCollection('posts'))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .map((post) => {
      return { ...post, id: extractPostId(post.id) };
    });

  return CATEGORY_LIST.flatMap((category) => {
    const filteredPosts = allPosts.filter(
      (post) => post.data.category === category,
    );
    return paginate(filteredPosts, {
      params: { category },
      pageSize: 10,
    });
  });
}

// コンポーネントの page と衝突するのか ts エラーが出てしまうのでリネームして回避
const { page: pageProps } = Astro.props;
const { category } = Astro.params as Params;
---

<PostPagingList
  headTitle={`${CATEGORY_MAP[category]} 記事一覧 - ${pageProps.currentPage}`}
  pageTitle={`${CATEGORY_MAP[category]} 記事一覧 - ${pageProps.currentPage}`}
  rss={RSS_LINKS[category]}
  postList={pageProps.data}
  previousUrl={pageProps.url.prev}
  nextUrl={pageProps.url.next}
/>
