---
import { getCollection } from 'astro:content';
import type { GetStaticPathsOptions, Page } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { CATEGORY_LIST, CATEGORY_MAP } from '@/consts';
import { extractPostSlug } from '@/utils/extractPostSlug';
import CategoryPage from '@/pageComponents/[category]/[page].astro';

type Params = {
  category: keyof typeof CATEGORY_MAP;
};
type Props = {
  page: Page<CollectionEntry<'posts'>>;
};

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = (await getCollection('posts'))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .map((post) => {
      return { ...post, slug: extractPostSlug(post.slug) };
    });

  return CATEGORY_LIST.map((category) => {
    const filteredPosts = allPosts.filter(
      (post) => post.data.category === category
    );
    return paginate(filteredPosts, {
      params: { category },
      pageSize: 10,
    });
  });
}

// コンポーネントの page と衝突するのか ts エラーが出てしまうのでリネームして回避
const { page: pageProps } = Astro.props;
const { category } = Astro.params as Params;
---

<CategoryPage category={category} page={pageProps} />
