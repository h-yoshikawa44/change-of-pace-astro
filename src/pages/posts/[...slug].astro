---
import { CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import FormattedDate from '@/components/FormattedDate.astro';
import '@/styles/markdown.scss';
import { CATEGORY_MAP } from '@/consts';
import { extractPostSlug } from '@/utils/extractPostSlug';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: { slug: extractPostSlug(post.slug) },
    props: post,
  }));
}
type Props = CollectionEntry<'posts'>;

const post = Astro.props;
const { title, description, pubDate, updatedDate, category, tags } = post.data;
const { Content, headings } = await post.render();
---

<BaseLayout
  title={title}
  description={description}
  noTopHeading={true}
  markdownHeadings={headings}
  isAdsense={true}
>
  <article class="post">
    <header>
      <p>
        <FormattedDate date={pubDate} />
        {
          updatedDate && pubDate.toString() !== updatedDate.toString() && (
            <span class="inline-flex items-center">
              (<span class="i-system-uicons:refresh mr-1">更新日</span>
              <FormattedDate date={updatedDate} />)
            </span>
          )
        }
      </p>
      <h1 class="text-4xl font-600 leading-12">{title}</h1>
      <p class="mt-4 flex items-center">
        <span class="i-system-uicons:document mr-0.5 text-lg">カテゴリー</span>
        {`${CATEGORY_MAP[category]}`}
      </p>
      <p class="flex items-center">
        <span class="i-system-uicons:tags mr-0.5 text-lg">タグ一覧</span>
        {tags.join(', ')}
      </p>
    </header>
    <hr
      class="my-4 h-[2px] border-none from-transparent via-gray-500 bg-gradient-to-r"
    />
    <div class="markdown-content">
      <Content />
    </div>
  </article>
</BaseLayout>
<script>
  import '@/scripts/codeCopyButton';
</script>
